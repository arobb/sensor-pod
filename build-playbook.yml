---
- hosts: all
  remote_user: root
  vars:
    gitPath: /home/pi/git
    piGenPath: "{{ gitPath }}/pi-gen"

  tasks:
    - name: Install dependencies
      apt:
        pkg:
          - apt-cacher-ng
          - bsdtar
          - coreutils
          - curl
          - debootstrap
          - dosfstools
          - file
          - git
          - grep
          - kmod
          - libcap2-bin
          - parted
          - qemu-user-static
          - quilt
          - rsync
          - sudo
          - udev
          - vim
          - xxd
          - xz-utils
          - zerofree
          - zip
        state: present

    # https://stackoverflow.com/a/37334415
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    # https://stackoverflow.com/a/19318368
    # openssl passwd -salt <salt> -1 <plaintext>
    # openssl passwd -salt 'My$@1t' -1 'raspberry'
    - name: Configure pi user account
      user:
        name: pi
        password: $1$My$@1t$g3URvhJ2y71Ol3qDP86fV1
        groups: wheel
        append: yes
        state: present
        createhome: yes

    - name: Clone repo
      git:
        repo: https://github.com/arobb/pi-gen.git
        dest: "{{ piGenPath }}"
        version: sensor-pod

    - name: Create the config file
      file:
        path: "{{ piGenPath }}/config"
        state: touch

    - name: Create stage touch files
      file:
        path: "{{ item }}"
        state: touch
      with_items:
        - "{{ piGenPath }}/stage3/SKIP"
        - "{{ piGenPath }}/stage4/SKIP"
        - "{{ piGenPath }}/stage5/SKIP"
        - "{{ piGenPath }}/stage4/SKIP_IMAGES"
        - "{{ piGenPath }}/stage5/SKIP_IMAGES"

    - name: Set apt proxy
      lineinfile:
        dest: "{{ piGenPath }}/config"
        state: present
        regexp: '^APT_PROXY=.*$'
        line: 'APT_PROXY=http://127.0.0.1:3142'

    - name: Set output image name
      lineinfile:
        dest: "{{ piGenPath }}/config"
        state: present
        regexp: '^IMG_NAME=.*$'
        line: "IMG_NAME='raspbian-sensor-pod'"
